# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [ "$OS" == "Windows_NT" ]; then
    # symlinks doesn't work on Windows
    DOTFILES=$HOME/dotfiles
else
    DOTFILES=$HOME/.dotfiles
fi

if [ -z "$TMUX" ]; then
    export TERM=xterm
fi

# Include color definitions
source $DOTFILES/bash/colors.bash

# Solarized dircolors
eval `dircolors $DOTFILES/bash/dircolors-solarized/dircolors.ansi-dark`

# ---------------------------------
# Functions
# ---------------------------------

# Usage: grepfilter PATTERN [file]
# Show contents of a file, but use grep to highlight a pattern
grepfilter() {
    if [ -e "$2" ]; then
        grep --color -E "$1|" $2
    else
        grep --color -E "$1|"
    fi
}

# return 0 (ok) if xclip is installed and a display is connected
_xclip_ok() {
    [ -n "$DISPLAY" ] || return 1
    /usr/bin/which xclip 1> /dev/null 2>&1 && return 0 || return 1
}

_in_tmux() {
    [ -n "$TMUX" ] && return 0 || return 1
}

# Run command $1 and copy output to tmux buffer and x-clipboard if available
_capture_output() {
    out=$($1)
    msg=''
    if _in_tmux; then
        echo -n "$out" | tmux load-buffer -
        msg="tmux"
    fi
    if _xclip_ok; then
        echo -n "$out" | xclip -in
        msg="$msg xclip"
    fi
    echo $out
    [ -n "$msg" ] && echo "[output in $msg]"
}

# Copy output of mktemp to clipboard (if xclip is available)
_mktemp_copy_filename() {
    _capture_output "mktemp --tmpdir $USER.XXX $*"
}
alias mktemp='_mktemp_copy_filename'

# Copy output of which to clipboard (if xclip is available)
_which_capture_output() {
    _capture_output "which $*"
}
alias which='_which_capture_output'

abspath() {
    _capture_output "_abspath.py -n $@"
}

# copy last command in history to clipboard
alias cphist='history 1 | perl -ne "print \$1 if /^(?:\s*\d+\s+)?(?:\[.+?\])?\s*(.*)\$/" | xclip -in'
alias d='dirs'
alias dutop='du -s * | sort -nrk1,1 | head'
alias grep='grep --color=auto'
alias hist='git hist -20'
alias l='less --RAW-CONTROL-CHARS'
alias ls="ls --color=auto"
alias ll="ls -lh --time-style=long-iso"
alias mv='mv -i'
alias o='popd'
alias p='pushd'
alias rm='rm -I'
alias tree='tree -C'
alias treefull='tree -Cfi'
alias v='vim -R'

export EDITOR=vim
export GIT_EDITOR=$EDITOR

shopt -s checkwinsize

export PATH=`$DOTFILES/bin/mergepaths.pl $PATH $DOTFILES/bin`

export HISTIGNORE='&:ls:ll:history*:cphist'
export HISTCONTROL='ignoreboth:erasedups'
export HISTTIMEFORMAT="[%F %T] "

if [ -f ~/.bashrc_local ]; then
    source ~/.bashrc_local
fi

# If a custom prompt is defined (like at work), use it instead of liquidprompt.
if [ -f ~/.bashrc_prompt ]; then
    source ~/.bashrc_prompt
else
    source $DOTFILES/bash/liquidprompt/liquidprompt
fi
