# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

if [ "$OS" == "Windows_NT" ]; then
    # symlinks doesn't work on Windows
    DOTFILES=$HOME/dotfiles
else
    DOTFILES=$HOME/.dotfiles
fi

if [ -z "$TMUX" ]; then
    export TERM=xterm
fi

# Include color definitions
source $DOTFILES/bash/colors.bash

# Solarized dircolors
eval `dircolors $DOTFILES/bash/dircolors-solarized/dircolors.ansi-dark`

# ---------------------------------
# Functions
# ---------------------------------

# Usage: grepfilter PATTERN [files...]
# Show contents of a file, but use grep to highlight a pattern
grepfilter() {
    if [ -e "$2" ]; then
        command grep --color=always -E "$1|" "${@:2}"
    else
        command grep --color=always -E "$1|"
    fi
}

# return 0 (ok) if xclip is installed and a display is connected
_have_xclip() {
    [ -n "$DISPLAY" ] || return 1
    command -pv xclip &> /dev/null
}

# Copy stdin to tmux buffer and x-clipboard if available
# Usage: command | _capture_output [-q]
_capture_output() {
    read out
    local msg=''
    if [ -n "$TMUX" ]; then
        echo -n "$out" | tmux load-buffer -
        msg="tmux"
    fi
    if _have_xclip; then
        echo -n "$out" | xclip -in
        msg="$msg xclip"
    fi
    [ -n "$1" ] && return   # no echo with -q
    echo $out
    [ -n "$msg" ] && echo "[output in $msg]"
}

# Copy output of mktemp to clipboard (if xclip is available)
_mktemp_copy_filename() {
    command -p mktemp --tmpdir $USER.XXX $* | _capture_output
}
alias mktemp='_mktemp_copy_filename'

# Copy output of which to clipboard (if xclip is available)
_which_capture_output() {
    command which $* | _capture_output
}
alias which='_which_capture_output'

# Print absolute path to files
abspath() {
    _abspath.py -n "$@" | _capture_output
}

# copy last command in history to clipboard
alias cphist='history 1 | perl -ne "print \$1 if /^(?:\s*\d+\s+)?(?:\[.+?\])?\s*(.*)\$/" | _capture_output -q'
alias d='dirs'
alias hist='git hist -10'
alias l='less --RAW-CONTROL-CHARS'
alias ls="ls --color=auto"
alias ll="ls -lh --time-style=long-iso"
alias mv='mv -i'
alias o='popd'
alias p='pushd'
alias rm='rm -I'
alias tree='tree -C'
alias treefull='tree -Cfi'
alias v='vim -R'

export GREP_OPTIONS='--color=auto'
export EDITOR=vim
export GIT_EDITOR=$EDITOR

shopt -s checkwinsize
shopt -s globstar

bind -x '"\eOP": "git hist -10"'    # F1

export PATH=`$DOTFILES/bin/mergepaths.pl $PATH $DOTFILES/bin`

export HISTIGNORE='&:ls:ll:history*:cphist'
export HISTCONTROL='ignoreboth:erasedups'
export HISTTIMEFORMAT="[%F %T] "

if [ -f ~/.bashrc_local ]; then
    source ~/.bashrc_local
fi

# If a custom prompt is defined (like at work), use it instead of liquidprompt.
if [ -f ~/.bashrc_prompt ]; then
    source ~/.bashrc_prompt
else
    source $DOTFILES/bash/liquidprompt/liquidprompt
fi
